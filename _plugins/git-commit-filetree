#!/bin/bash
#
#  git-commit-filetree - commit an arbitrary tree of files
#                        to a branch in a git repository.
#
#  Version:  cjsnjr.2015-08-08.0
#
#  Authors:
#    Curt J. Sampson <cjs@cynic.net>
#    Nishant Rodrigues <nishantjr@gmail.com>
#  Please find the latest version of this (with tests and copying rights) at:
#    https://github.com/cjs-cynic-net/git-commit-filetree
#

set -e

index_file=$(mktemp)
internal_error=true
trap 'rm -f $index_file; $internal_error && err 255 "INTERNAL ERROR. FAILED!"' 0

err() {
    local exitcode="$1"; shift
    internal_error=false
    echo 1>&2 "$@"
    exit $exitcode
}

[ -z "$2" ] && err 129 "Usage: git commit-filetree <branch> <path>"

# Check that we have no uncommited or unknown files.
git diff-index --quiet HEAD \
    || err  1 "Cannot commit with uncommited files in working copy."
[ -z "$(git ls-files --exclude-standard --others)" ] \
    || err  1 "Cannot commit with untracked files in working copy."

branch=refs/heads/$(echo $1 | sed -e 's,^refs/heads/,,')
git show-ref -q --verify $branch || err 128 "Invalid ref: $branch"

source_sha=$(git show --quiet --pretty='format:%h')

# Switch to an index separate from repo working copy.
export GIT_INDEX_FILE=$index_file

git read-tree --empty
git --work-tree=$2 add -A
tree_sha=$(git write-tree)
parent_tree_sha=$(git log -1 $branch --format='%T')
[ "$tree_sha" = "$parent_tree_sha" ] && { internal_error=false; exit 0; }

commit_msg="Build from source commit $source_sha."
commit_sha=$(echo "$commit_msg" | git commit-tree $tree_sha -p $branch)

git update-ref $branch $commit_sha \
    -m "commit-filetree: $commit_msg"

internal_error=false
